{
	"objName": "Stage",
	"variables": [{
			"name": "motor speed",
			"value": 255,
			"isPersistent": false
		}],
	"costumes": [{
			"costumeName": "backdrop1",
			"baseLayerID": 3,
			"baseLayerMD5": "739b5e2a2435f6e1ec2993791b423146.png",
			"bitmapResolution": 1,
			"rotationCenterX": 240,
			"rotationCenterY": 180
		}],
	"currentCostumeIndex": 0,
	"penLayerMD5": "5c81a336fab8be57adc039a8a2b33ca9.png",
	"penLayerID": 0,
	"tempoBPM": 60,
	"videoAlpha": 0.5,
	"children": [{
			"target": "Stage",
			"cmd": "soundLevel",
			"param": null,
			"color": 2926050,
			"label": "loudness",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 5,
			"y": 59,
			"visible": false
		},
		{
			"target": "M-Panda",
			"cmd": "getVar:",
			"param": "Ultasonic sensor value :",
			"color": 15629590,
			"label": "M-Panda: Ultasonic sensor value :",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 5,
			"y": 5,
			"visible": false
		},
		{
			"target": "M-Panda",
			"cmd": "getVar:",
			"param": "Light sensor value :",
			"color": 15629590,
			"label": "M-Panda: Light sensor value :",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 5,
			"y": 32,
			"visible": false
		},
		{
			"target": "M-Panda",
			"cmd": "getVar:",
			"param": "Line follower value :",
			"color": 15629590,
			"label": "M-Panda: Line follower value :",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 5,
			"y": 86,
			"visible": false
		},
		{
			"target": "Stage",
			"cmd": "getVar:",
			"param": "motor speed",
			"color": 15629590,
			"label": "motor speed",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 5,
			"y": 113,
			"visible": false
		},
		{
			"target": "M-Panda",
			"cmd": "getVar:",
			"param": "color",
			"color": 15629590,
			"label": "M-Panda: color",
			"mode": 1,
			"sliderMin": 0,
			"sliderMax": 100,
			"isDiscrete": true,
			"x": 5,
			"y": 140,
			"visible": false
		},
		{
			"objName": "M-Panda",
			"variables": [{
					"name": "Ultasonic sensor value :",
					"value": 17.827587127685547,
					"isPersistent": false
				},
				{
					"name": "Light sensor value :",
					"value": 9,
					"isPersistent": false
				},
				{
					"name": "Line follower value :",
					"value": 3,
					"isPersistent": false
				},
				{
					"name": "color",
					"value": 256,
					"isPersistent": false
				}],
			"scripts": [[53,
					6,
					[["whenGreenFlag"],
						["say:", "Test 1 :  Ultrasonic sensor"],
						["showVariable:", "Ultasonic sensor value :"],
						["setVar:to:", "Ultasonic sensor value :", 0],
						["doUntil", ["keyPressed:", "y"], [["setVar:to:", "Ultasonic sensor value :", ["mBot.getUltrasonic", "Port3"]]]],
						["hideVariable:", "Ultasonic sensor value :"],
						["doWaitUntil", ["not", ["keyPressed:", "y"]]],
						["showVariable:", "Light sensor value :"],
						["say:", "Test 2 :  Light sensor"],
						["setVar:to:", "Light sensor value :", 0],
						["doUntil", ["keyPressed:", "y"], [["setVar:to:", "Light sensor value :", ["mBot.getLightSensor", "light sensor on board"]]]],
						["hideVariable:", "Light sensor value :"],
						["doWaitUntil", ["not", ["keyPressed:", "y"]]],
						["showVariable:", "Line follower value :"],
						["say:", "Test 3 :  Line follower sensor"],
						["setVar:to:", "Line follower value :", 0],
						["doUntil", ["keyPressed:", "y"], [["setVar:to:", "Line follower value :", ["mBot.getLinefollower", "Port2"]]]],
						["hideVariable:", "Line follower value :"],
						["doWaitUntil", ["not", ["keyPressed:", "y"]]],
						["showVariable:", "motor speed"],
						["say:", "Test 4 : m1 motor - forward"],
						["setVar:to:", "motor speed", 0],
						["doRepeat", 255, [["changeVar:by:", "motor speed", 1], ["mBot.runMotor", "M1", ["readVariable", "motor speed"]]]],
						["doWaitUntil", ["keyPressed:", "y"]],
						["mBot.runMotor", "M1", 0],
						["doWaitUntil", ["not", ["keyPressed:", "y"]]],
						["say:", "Test 5 :  m1 motor - backward"],
						["setVar:to:", "motor speed", 0],
						["doRepeat", 255, [["changeVar:by:", "motor speed", -1], ["mBot.runMotor", "M1", ["readVariable", "motor speed"]]]],
						["doWaitUntil", ["keyPressed:", "y"]],
						["mBot.runMotor", "M1", 0],
						["doWaitUntil", ["not", ["keyPressed:", "y"]]],
						["say:", "Test 6 : m2 motor - forward"],
						["setVar:to:", "motor speed", 0],
						["doRepeat", 255, [["changeVar:by:", "motor speed", 1], ["mBot.runMotor", "M2", ["readVariable", "motor speed"]]]],
						["doWaitUntil", ["keyPressed:", "y"]],
						["mBot.runMotor", "M2", 0],
						["doWaitUntil", ["not", ["keyPressed:", "y"]]],
						["say:", "Test 7 :  m2 motor - backward"],
						["setVar:to:", "motor speed", 0],
						["doRepeat", 255, [["changeVar:by:", "motor speed", -1], ["mBot.runMotor", "M2", ["readVariable", "motor speed"]]]],
						["doWaitUntil", ["keyPressed:", "y"]],
						["mBot.runMotor", "M2", 0],
						["doWaitUntil", ["not", ["keyPressed:", "y"]]],
						["say:", "Test 8 :  m1 + m2 motor"],
						["setVar:to:", "motor speed", 0],
						["doRepeat",
							255,
							[["changeVar:by:", "motor speed", 1],
								["mBot.runMotor", "M1", ["readVariable", "motor speed"]],
								["mBot.runMotor", "M2", ["\/", ["readVariable", "motor speed"], -1]]]],
						["doWaitUntil", ["keyPressed:", "y"]],
						["mBot.runMotor", "M1", 0],
						["mBot.runMotor", "M2", 0],
						["hideVariable:", "motor speed"],
						["doWaitUntil", ["not", ["keyPressed:", "y"]]],
						["say:", "Test 9 : play tone"],
						["doUntil", ["keyPressed:", "y"], [["mBot.runBuzzer", "C4", "Half"], ["mBot.runBuzzer", "D4", "Half"]]],
						["mBot.stopBuzzer"],
						["doWaitUntil", ["not", ["keyPressed:", "y"]]],
						["say:", "Test 10 : led"],
						["setVar:to:", "color", 0],
						["showVariable:", "color"],
						["doRepeat",
							256,
							[["mBot.runLed", "led on board", "all", ["readVariable", "color"], 0, 0], ["changeVar:by:", "color", 1]]],
						["setVar:to:", "color", 0],
						["doRepeat",
							256,
							[["mBot.runLed", "led on board", "all", "0", ["readVariable", "color"], 0], ["changeVar:by:", "color", 1]]],
						["setVar:to:", "color", 0],
						["doRepeat",
							256,
							[["mBot.runLed", "led on board", "all", "0", "0", ["readVariable", "color"]], ["changeVar:by:", "color", 1]]],
						["hideVariable:", "color"],
						["doUntil",
							["keyPressed:", "y"],
							[["mBot.runLed",
									"led on board",
									"all",
									["randomFrom:to:", 0, 255],
									["randomFrom:to:", 0, 255],
									["randomFrom:to:", 0, 255]]]],
						["doWaitUntil", ["not", ["keyPressed:", "y"]]]]]],
			"costumes": [{
					"costumeName": "Panda-a",
					"baseLayerID": 1,
					"baseLayerMD5": "bcb096d2b695d5623e814e1033620f2c.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 0,
					"rotationCenterY": 0
				},
				{
					"costumeName": "Panda-b",
					"baseLayerID": 2,
					"baseLayerMD5": "d96c5b61611cf43c1476ed0a50e2bcb3.svg",
					"bitmapResolution": 1,
					"rotationCenterX": 0,
					"rotationCenterY": 0
				}],
			"currentCostumeIndex": 0,
			"scratchX": 188,
			"scratchY": -127,
			"scale": 1,
			"direction": 90,
			"rotationStyle": "normal",
			"isDraggable": false,
			"indexInLibrary": 1,
			"visible": true,
			"spriteInfo": {
			}
		}],
	"info": {
		"spriteCount": 1,
		"scriptCount": 1,
		"savedExtensions": [{
				"menus": {
					"ircode": ["A",
						"B",
						"C",
						"D",
						"E",
						"F",
						"↑",
						"↓",
						"←",
						"→",
						"Setting",
						"R0",
						"R1",
						"R2",
						"R3",
						"R4",
						"R5",
						"R6",
						"R7",
						"R8",
						"R9"],
					"whitePorts": ["Port1", "Port2", "Port3", "Port4"],
					"servoPort": ["Port1", "Port2", "Port3", "Port4"],
					"Axis": ["X-Axis", "Y-Axis"],
					"yellowPorts": ["Port1", "Port2", "Port3", "Port4"],
					"button_state": ["pressed", "released"],
					"points": [":", " "],
					"normalPort": ["Port1", "Port2", "Port3", "Port4"],
					"blackPorts": ["Port3", "Port4"],
					"laport": ["light sensor on board", "Port3", "Port4"],
					"index": ["all", 1, 2, 3, 4],
					"switch": ["Off", "On"],
					"humiture": ["humidity", "temperature"],
					"index2": ["all", 1, 15, 30],
					"note": ["C2",
						"D2",
						"E2",
						"F2",
						"G2",
						"A2",
						"B2",
						"C3",
						"D3",
						"E3",
						"F3",
						"G3",
						"A3",
						"B3",
						"C4",
						"D4",
						"E4",
						"F4",
						"G4",
						"A4",
						"B4",
						"C5",
						"D5",
						"E5",
						"F5",
						"G5",
						"A5",
						"B5",
						"C6",
						"D6",
						"E6",
						"F6",
						"G6",
						"A6",
						"B6",
						"C7",
						"D7",
						"E7",
						"F7",
						"G7",
						"A7",
						"B7",
						"C8",
						"D8"],
					"value": [0, 20, 60, 150, 255],
					"motorvalue": [255, 100, 50, 0, -50, -100, -255],
					"servovalue": [0, 45, 90, 135, 180],
					"shutter": ["Press", "Release", "Focus On", "Focus Off"],
					"lport": ["led on board", "Port1", "Port2", "Port3", "Port4"],
					"direction": ["run forward", "run backward", "turn right", "turn left"],
					"grayPorts": [],
					"touch_mode": ["direct", "toggle"],
					"bluePorts": ["Port1", "Port2", "Port3", "Port4"],
					"button_key": ["key1", "key2", "key3", "key4"],
					"beats": ["Half", "Quater", "Eighth", "Whole", "Double", "Zero"],
					"GyroAxis": ["X-Axis", "Y-Axis", "Z-Axis"],
					"slot": ["Slot1", "Slot2"],
					"port": ["Port1", "Port2", "Port3", "Port4"],
					"motorPort": ["M1", "M2"]
				},
				"extensionName": "mBot",
				"javascriptURL": "js\/mbot.js",
				"blockSpecs": [["h",
						"mBot Program",
						"runArduino",
						{
							"setup": "",
							"src": "mbot",
							"loop": "",
							"def": "",
							"inc": "#include <MeMCore.h>\n"
						}],
					["-"],
					["w",
						"%m.direction at speed %d.motorvalue",
						"runBot",
						"run forward",
						0,
						{
							"setup": "",
							"work": "motor.move({0},{1});\n",
							"encode": "{d0}{s1}",
							"inc": "",
							"loop": "",
							"def": "MBotDCMotor motor(0);\n"
						}],
					["w",
						"set motor%d.motorPort speed %d.motorvalue",
						"runMotor",
						"M1",
						0,
						{
							"setup": "",
							"work": "motor_{0}.run(({0})==M1?-({1}):({1}));\n",
							"encode": "{d0}{s1}",
							"inc": "",
							"loop": "",
							"def": "MeDCMotor motor_{0}({0});\n"
						}],
					["w",
						"set servo %d.servoPort %d.slot angle %d.servovalue",
						"runServo",
						"Port1",
						"Slot1",
						90,
						{
							"setup": "servo_{0}_{1}.attach(port_{0}.pin{1}());\n",
							"work": "servo_{0}_{1}.write({2});\n",
							"encode": "{d0}{d1}{d2}",
							"inc": "",
							"loop": "",
							"def": "Servo servo_{0}_{1};\nMePort port_{0}({0});\n"
						}],
					["w",
						"set led %d.lport %d.index red%d.value green%d.value blue%d.value",
						"runLed",
						"led on board",
						"all",
						0,
						0,
						0,
						{
							"setup": "",
							"work": "rgbled_{0}.setColor({1},{2},{3},{4});\nrgbled_{0}.show();\n",
							"encode": "{d0}{d1}{d2}{d3}{d4}",
							"inc": "",
							"loop": "",
							"def": "MeRGBLed rgbled_{0}({0}, {0}==7?2:4);\n"
						}],
					["w",
						"set led strip %d.normalPort %d.slot %d.index2 red%d.value green%d.value blue%d.value",
						"runLedStrip",
						"Port1",
						"Slot2",
						"all",
						0,
						0,
						0,
						{
							"setup": "",
							"work": "rgbled_{0}_{1}.setColor({2},{3},{4},{5});\nrgbled_{0}_{1}.show();\n",
							"encode": "{d0}{d1}{d2}{d3}{d4}",
							"inc": "",
							"loop": "",
							"def": "MeRGBLed rgbled_{0}_{1}({0}, {1}, 32);\n"
						}],
					["w",
						"play tone on note %d.note beat %d.beats",
						"runBuzzer",
						"C4",
						"Half",
						{
							"setup": "",
							"work": "buzzer.tone({0}, {1});\n",
							"encode": "{s0}",
							"inc": "",
							"loop": "",
							"def": "MeBuzzer buzzer;\n"
						}],
					["w",
						"stop tone",
						"stopBuzzer",
						0,
						{
							"setup": "",
							"work": "buzzer.noTone();\n",
							"encode": "{s0}",
							"inc": "",
							"loop": "",
							"def": "MeBuzzer buzzer;\n"
						}],
					["w",
						"show face %d.normalPort x:%n y:%n characters:%s",
						"showCharacters",
						"Port1",
						0,
						0,
						"Hi",
						{
							"setup": "ledMtx_{0}.setColorIndex(1);\nledMtx_{0}.setBrightness(6);\n",
							"work": "ledMtx_{0}.drawStr({1},7-{2},{3});\n",
							"encode": "{s0}",
							"inc": "",
							"loop": "",
							"def": "MeLEDMatrix ledMtx_{0}({0});\n"
						}],
					["w",
						"show time %d.normalPort hour:%n %m.points min:%n",
						"showTime",
						"Port1",
						10,
						":",
						20,
						{
							"setup": "ledMtx_{0}.setColorIndex(1);\nledMtx_{0}.setBrightness(6);\n",
							"work": "ledMtx_{0}.showClock({1},{3},strcmp({2},\":\")==0);\n",
							"encode": "{s0}",
							"inc": "",
							"loop": "",
							"def": "MeLEDMatrix ledMtx_{0}({0});\n"
						}],
					["w",
						"show drawing %d.normalPort x:%n y:%n draw:%m.drawFace",
						"showDraw",
						"Port1",
						0,
						0,
						"        ",
						{
							"setup": "ledMtx_{0}.setColorIndex(1);\nledMtx_{0}.setBrightness(6);\n",
							"work": "drawTemp = new unsigned char[16]{{3}};\nmemcpy(drawBuffer,drawTemp,16);\nfree(drawTemp);\nledMtx_{0}.drawBitmap({1},{2},16,drawBuffer);\n",
							"encode": "{s0}",
							"inc": "",
							"loop": "",
							"def": "MeLEDMatrix ledMtx_{0}({0});\nunsigned char drawBuffer[16];\nunsigned char *drawTemp;\n"
						}],
					["-"],
					["w",
						"set 7-segments display%d.bluePorts number %n",
						"runSevseg",
						"Port1",
						100,
						{
							"setup": "",
							"work": "seg7_{0}.display((double){1});\n",
							"encode": "{d0}{f1}",
							"inc": "",
							"loop": "",
							"def": "Me7SegmentDisplay seg7_{0}({0});\n"
						}],
					["w",
						"set light sensor %d.blackPorts led as %d.switch",
						"runLightSensor",
						"Port3",
						"On",
						{
							"setup": "",
							"work": "lightsensor_{0}.dWrite1({1});\n",
							"encode": "{d0}{d1}",
							"inc": "",
							"loop": "",
							"def": "MePort lightsensor_{0}({0});\n"
						}],
					["w",
						"set camera shutter %d.normalPort as %d.shutter",
						"runShutter",
						"Port1",
						"Press",
						{
							"setup": "",
							"work": "shutter_{0}.dWrite1({1});\n",
							"encode": "{d0}{d1}",
							"inc": "",
							"loop": "",
							"def": "MePort shutter_{0}({0});\n"
						}],
					["-"],
					["R",
						"light sensor %d.laport",
						"getLightSensor",
						"light sensor on board",
						{
							"setup": "",
							"work": "lightsensor_{0}.aRead2()",
							"encode": "{d0}",
							"inc": "",
							"loop": "",
							"def": "MePort lightsensor_{0}({0});\n"
						}],
					["h", "when button %m.button_state", "whenButtonPressed", "pressed"],
					["B",
						"button %m.button_state",
						"getButtonOnBoard",
						"pressed",
						{
							"setup": "pinMode(A7,INPUT);\n",
							"work": "({0}^(analogRead(A7)>10?0:1))",
							"encode": "{n7}{d0}",
							"inc": "",
							"loop": "",
							"def": ""
						}],
					["-"],
					["R",
						"ultrasonic sensor %d.whitePorts distance",
						"getUltrasonic",
						"Port3",
						{
							"setup": "",
							"work": "ultrasonic_{0}.distanceCm()",
							"encode": "{d0}",
							"inc": "",
							"loop": "",
							"def": "MeUltrasonicSensor ultrasonic_{0}({0});\n"
						}],
					["R",
						"line follower %d.normalPort",
						"getLinefollower",
						"Port2",
						{
							"setup": "",
							"work": "linefollower_{0}.dRead1()*2+linefollower_{0}.dRead2()",
							"encode": "{d0}",
							"inc": "",
							"loop": "",
							"def": "MePort linefollower_{0}({0});\n"
						}],
					["R",
						"joystick %d.blackPorts %d.Axis",
						"getJoystick",
						"Port3",
						"X-Axis",
						{
							"setup": "",
							"work": "joystick_{0}.read({1})",
							"encode": "{d0}{d1}",
							"inc": "",
							"loop": "",
							"def": "MeJoystick joystick_{0}({0});\n"
						}],
					["R",
						"potentiometer %d.blackPorts",
						"getPotentiometer",
						"Port3",
						{
							"setup": "",
							"work": "potentiometer_{0}.aRead2()",
							"encode": "{d0}",
							"inc": "",
							"loop": "",
							"def": "MePort potentiometer_{0}({0});\n"
						}],
					["R",
						"sound sensor %d.blackPorts",
						"getSoundSensor",
						"Port3",
						{
							"setup": "",
							"work": "soundsensor_{0}.aRead2()",
							"encode": "{d0}",
							"inc": "",
							"loop": "",
							"def": "MePort soundsensor_{0}({0});\n"
						}],
					["B",
						"limit switch %d.normalPort %d.slot",
						"getLimitswitch",
						"Port1",
						"Slot1",
						{
							"setup": "",
							"work": "sw_{0}_{1}.dpRead{1}()",
							"encode": "{d0}{d1}",
							"inc": "",
							"loop": "",
							"def": "MePort sw_{0}_{1}({0});\n"
						}],
					["R",
						"temperature %d.normalPort%d.slot °C",
						"getTemperature",
						"Port3",
						"Slot1",
						{
							"setup": "",
							"work": "temperature_{0}_{1}.temperature()",
							"encode": "{d0}{d1}",
							"inc": "",
							"loop": "",
							"def": "MeTemperature temperature_{0}_{1}({0},{1});\n"
						}],
					["R",
						"pir motion sensor %d.bluePorts",
						"getPirmotion",
						"Port2",
						{
							"setup": "",
							"work": "pir_{0}.dRead2()",
							"encode": "{d0}",
							"inc": "",
							"loop": "",
							"def": "MePort pir_{0}({0});\n"
						}],
					["R",
						"3-axis gyro %d.GyroAxis angle",
						"getGyro",
						"X-Axis",
						{
							"setup": "gyro.begin();\n",
							"work": "gyro.getAngle({0})",
							"encode": "{d0}",
							"inc": "",
							"loop": "gyro.update();\n",
							"def": "MeGyro gyro;\n"
						}],
					["R",
						"humiture sensor %d.normalPort %d.humiture",
						"getHumiture",
						"Port1",
						"humidity",
						{
							"setup": "",
							"work": "humiture_{0}.getValue({1})",
							"encode": "",
							"inc": "",
							"loop": "humiture_{0}.update();\n",
							"def": "MeHumiture humiture_{0}({0});\n"
						}],
					["R",
						"flame sensor %d.blackPorts",
						"getFlame",
						"Port3",
						{
							"setup": "",
							"work": "flameSensor_{0}.readAnalog()",
							"encode": "",
							"inc": "",
							"loop": "",
							"def": "MeFlameSensor flameSensor_{0}({0});\n"
						}],
					["R",
						"gas sensor %d.blackPorts",
						"getGas",
						"Port3",
						{
							"setup": "",
							"work": "gasSensor_{0}.readAnalog()",
							"encode": "",
							"inc": "",
							"loop": "",
							"def": "MeGasSensor gasSensor_{0}({0});\n"
						}],
					["R",
						"compass sensor %d.normalPort",
						"gatCompass",
						"Port1",
						{
							"setup": "compass_{0}.begin();\n",
							"work": "compass_{0}.getAngle()",
							"encode": "",
							"inc": "",
							"loop": "",
							"def": "MeCompass compass_{0}({0});\n"
						}],
					["B",
						"touch sensor %d.normalPort",
						"getTouchSensor",
						"Port1",
						{
							"setup": "",
							"work": "touchSensor_{0}.touched()",
							"encode": "{d0}",
							"inc": "",
							"loop": "",
							"def": "MeTouchSensor touchSensor_{0}({0});\n"
						}],
					["B",
						"button %d.blackPorts %m.button_key pressed",
						"getButton",
						"Port3",
						"key1",
						{
							"setup": "",
							"work": "(buttonSensor_{0}.pressed()=={1})",
							"encode": "{d0}",
							"inc": "",
							"loop": "",
							"def": "Me4Button buttonSensor_{0}({0});\n"
						}],
					["-"],
					["B",
						"ir remote %m.ircode pressed",
						"getIrRemote",
						"A",
						{
							"setup": "ir.begin();\n",
							"work": "ir.keyPressed({0})",
							"encode": "{n0}{d0}",
							"inc": "",
							"loop": "ir.loop();\n",
							"def": "MeIR ir;\n"
						}],
					["-"],
					["w",
						"send mBot's message %s",
						"runIR",
						"hello",
						{
							"setup": "ir.begin();\n",
							"work": "ir.sendString({0});\n",
							"encode": "{m0}",
							"inc": "",
							"loop": "",
							"def": "MeIR ir;\n"
						}],
					["R",
						"mBot's message received",
						"getIR",
						{
							"setup": "ir.begin();\n",
							"work": "ir.getString()",
							"encode": "{n0}",
							"inc": "",
							"loop": "",
							"def": "MeIR ir;\n"
						}],
					["-"],
					["R",
						"timer",
						"getTimer",
						"0",
						{
							"setup": "",
							"work": "getLastTime()",
							"encode": "{n0}",
							"inc": "",
							"loop": "",
							"def": "double currentTime = 0;\ndouble lastTime = 0;\ndouble getLastTime(){\n\treturn currentTime = millis()\/1000.0 - lastTime;\n}\n"
						}],
					["w",
						"reset timer",
						"resetTimer",
						"0",
						{
							"setup": "",
							"work": "lastTime = millis()\/1000.0;\n",
							"encode": "{n0}",
							"inc": "",
							"loop": "",
							"def": "double currentTime = 0;\ndouble lastTime = 0;\n"
						}]]
			}],
		"flashVersion": "WIN 19,0,0,169",
		"swfVersion": "v3.2.2",
		"boardVersion": "mbot_uno",
		"videoOn": false
	}
}
